# Installing localGPT
# make a new conda environment
> conda create -n test python=3.9.0 ipython

# install torch with cuda
> pip install torch==2.3.1 torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118

> pip install -r requirements.txt
# needed to downgrade to huggingface_hub==0.24.7 as cached_download has been deprecated
# may need to change versions/patches, see conda_working_cuda.txt for working state

> CMAKE_ARGS="-DGGML_BLAS=ON -DGGML_BLAS_VENDOR=cuBLAS" FORCE_CMAKE=1 pip install llama-cpp-python

> pip install langchain==0.0.348

# Running localGPT
> conda activate /work/atif/localGPT-env/

# then follow the steps in localGPT's README
# FastCaloSim related documents are in /work/atif/localGPT-env/FCS-KB

# For Treesitter parser
pip install tree-sitter==0.20.4 tree-sitter-languages==1.10.2


# Running the setup
python run_celloai.py --model_type=llama3 --temperature=0.01
python run_interactive.py --model_type=llama3 --temperature=0.01


#
# Installing Doxygen and graphviz
# TODO
# Edit Doxyfile with name of PROJECT_NAME and INPUT
# 
# Install websocat
git clone https://github.com/vi/websocat.git
cd websocat/
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
ls $HOME/.cargo/bin/cargo
export PKG_CONFIG_PATH=/home/atif/packages/openssl-1.1.1l/lib/pkgconfig/
/home/atif/.cargo/bin/cargo build --release --features=ssl
export LD_LIBRARY_PATH=/home/atif/packages/openssl-1.1.1l/lib/:$LD_LIBRARY_PATH

# NEW Launch WebSockets on port 8080 from Python script
python3 websocket_server.py

# Lunch up Python server
python3 -m http.server 8080 --bind 0.0.0.0

# Port Forward
ssh -L 8080:localhost:8080 -L 8765:localhost:8765 atif@dahlia.csi.bnl.gov

# Copy doxyRAGenlocal.html to local machine, launch a python server 
# Open http://localhost:4461/annotated.html on your browser
python3 -m http.server 4461 --bind 0.0.0.0



# m4, autotools, pkg-config, ctags
  509  ls
  510  cd ..
  511  wget ftp.gnu.org/gnu/m4/m4-1.4.19.tar.gz 
  512  tar -xvzf m4-1.4.19.tar.gz
  513  cd m4-1.4.19
  514  ls
  515  ./configure --prefix=/home/atif/packages/autotools/
  516  make -j8
  517  make install
  518  cd ../autotools/
  519  ls
  520  export PATH=/home/atif/packages/autotools/bin/:$PATH
  483  wget http://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.gz 
  484  tar xf autoconf-2.69.tar.gz 
  485  cd autoconf-2.69
  503  ./configure --prefix=/home/atif/packages/autotools/
  521  cd ../autoconf-2.69
  522  ./configure 
  523  ./configure --prefix=/home/atif/packages/autotools/
  524  make -j8
  525  make install
  526  cd ..
  527  wget http://ftp.gnu.org/gnu/automake/automake-1.15.tar.gz
  528  tar xf automake-1.15.tar.gz 
  529  cd automake-1.15
  530  ./configure --prefix=/home/atif/packages/autotools/
  531  make -j8
  532  make install
  533  cd ..
  545  wget http://ftp.gnu.org/gnu/libtool/libtool-2.4.tar.gz
  546  tar xf libtool-2.4.tar.gz 
  547  cd libtool-2.4
  548  ls
  549  ./configure --prefix=/home/atif/packages/autotools/
  550  make
  551  make install
  552  cd ..
  553  ls
export LD_LIBRARY_PATH=/home/atif/packages/autotools/lib/:$LD_LIBRARY_PATH
export PATH=/home/atif/packages/autotools/bin/:$PATH
  531  wget https://pkgconfig.freedesktop.org/releases/pkg-config-0.29.2.tar.gz
  532  tar xvzf pkg-config-0.29.2.tar.gz
  533  cd pkg-config-0.29.2
  534  ./configure --prefix=/home/atif/packages/autotools --with-internal-glib
  535  make -j8
  536  make install

  477  git clone https://github.com/universal-ctags/ctags.git
  478  cd ctags/
